/*! For license information please see scripts.js.LICENSE.txt */
(()=>{"use strict";const{$:e}=window;class t{constructor(t){return this.$container=e(t),this.$container.on("click",".js-input-wrapper",(t=>{const s=e(t.currentTarget);this.toggleChildTree(s)})),this.$container.on("click",".js-toggle-choice-tree-action",(t=>{const s=e(t.currentTarget);this.toggleTree(s)})),{enableAutoCheckChildren:()=>this.enableAutoCheckChildren(),enableAllInputs:()=>this.enableAllInputs(),disableAllInputs:()=>this.disableAllInputs()}}enableAutoCheckChildren(){this.$container.on("change",'input[type="checkbox"]',(t=>{const s=e(t.currentTarget);s.closest("li").find('ul input[type="checkbox"]').prop("checked",s.is(":checked"))}))}enableAllInputs(){this.$container.find("input").removeAttr("disabled")}disableAllInputs(){this.$container.find("input").attr("disabled","disabled")}toggleChildTree(e){const t=e.closest("li");t.hasClass("expanded")?t.removeClass("expanded").addClass("collapsed"):t.hasClass("collapsed")&&t.removeClass("collapsed").addClass("expanded")}toggleTree(t){const s=t.closest(".js-choice-tree-container"),a=t.data("action"),l={addClass:{expand:"expanded",collapse:"collapsed"},removeClass:{expand:"collapsed",collapse:"expanded"},nextAction:{expand:"collapse",collapse:"expand"},text:{expand:"collapsed-text",collapse:"expanded-text"},icon:{expand:"collapsed-icon",collapse:"expanded-icon"}};s.find("li").each(((t,s)=>{const n=e(s);n.hasClass(l.removeClass[a])&&n.removeClass(l.removeClass[a]).addClass(l.addClass[a])})),t.data("action",l.nextAction[a]),t.find(".material-icons").text(t.data(l.icon[a])),t.find(".js-toggle-text").text(t.data(l.text[a]))}}$((function(){let e={};$('[id^="customer_group_id_"]').each((function(s){e[s]=new t("#"+$(this).attr("id")),e[s].enableAutoCheckChildren()}))}))})();